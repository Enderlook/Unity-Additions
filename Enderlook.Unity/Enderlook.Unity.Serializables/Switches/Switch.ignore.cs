//====================================================================================================
// <auto-generated>       THIS IS AN AUTOGENERATED FILE. DO NOT EDIT MANUALLY       </auto-generated>
//====================================================================================================

using Enderlook.Unity.Attributes;
using Enderlook.Unity.Attributes.AttributeUsage;

using System;

using UnityEngine;

namespace Enderlook.Unity.Serializables
{
    [Serializable]
    public abstract class Switch<T1, T2> : Switch
    {
        [SerializeField, PropertyPopupOption(1), DoNotCheck(typeof(PropertyPopupOptionAttribute))]
        private T1 item1;

        public T1 Value1 => Mode == 1 ? item1 : throw new InvalidOperationException(string.Format(WRONG_MODE, nameof(Value1), Mode));

        [SerializeField, PropertyPopupOption(2), DoNotCheck(typeof(PropertyPopupOptionAttribute))]
        private T2 item2;

        public T2 Value2 => Mode == 2 ? item2 : throw new InvalidOperationException(string.Format(WRONG_MODE, nameof(Value2), Mode));

    }

    [Serializable]
    public abstract class Switch<T1, T2, T3> : Switch
    {
        [SerializeField, PropertyPopupOption(1), DoNotCheck(typeof(PropertyPopupOptionAttribute))]
        private T1 item1;

        public T1 Value1 => Mode == 1 ? item1 : throw new InvalidOperationException(string.Format(WRONG_MODE, nameof(Value1), Mode));

        [SerializeField, PropertyPopupOption(2), DoNotCheck(typeof(PropertyPopupOptionAttribute))]
        private T2 item2;

        public T2 Value2 => Mode == 2 ? item2 : throw new InvalidOperationException(string.Format(WRONG_MODE, nameof(Value2), Mode));

        [SerializeField, PropertyPopupOption(3), DoNotCheck(typeof(PropertyPopupOptionAttribute))]
        private T3 item3;

        public T3 Value3 => Mode == 3 ? item3 : throw new InvalidOperationException(string.Format(WRONG_MODE, nameof(Value3), Mode));

    }

    [Serializable]
    public abstract class Switch<T1, T2, T3, T4> : Switch
    {
        [SerializeField, PropertyPopupOption(1), DoNotCheck(typeof(PropertyPopupOptionAttribute))]
        private T1 item1;

        public T1 Value1 => Mode == 1 ? item1 : throw new InvalidOperationException(string.Format(WRONG_MODE, nameof(Value1), Mode));

        [SerializeField, PropertyPopupOption(2), DoNotCheck(typeof(PropertyPopupOptionAttribute))]
        private T2 item2;

        public T2 Value2 => Mode == 2 ? item2 : throw new InvalidOperationException(string.Format(WRONG_MODE, nameof(Value2), Mode));

        [SerializeField, PropertyPopupOption(3), DoNotCheck(typeof(PropertyPopupOptionAttribute))]
        private T3 item3;

        public T3 Value3 => Mode == 3 ? item3 : throw new InvalidOperationException(string.Format(WRONG_MODE, nameof(Value3), Mode));

        [SerializeField, PropertyPopupOption(4), DoNotCheck(typeof(PropertyPopupOptionAttribute))]
        private T4 item4;

        public T4 Value4 => Mode == 4 ? item4 : throw new InvalidOperationException(string.Format(WRONG_MODE, nameof(Value4), Mode));

    }

}