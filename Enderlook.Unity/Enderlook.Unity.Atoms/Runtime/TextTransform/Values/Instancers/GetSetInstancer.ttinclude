<#+
    void WriteGetSetInstancer(string name, string dataType)
    {
        WriteHeader();
#>
using Enderlook.Unity.Attributes;

using System.Runtime.CompilerServices;

using UnityEngine;
<#+
        WriteNamespace();
#>
    [AddComponentMenu("<#= menuPath #>Instancers/<#= name #>GetSetInstancer")]
    [DefaultExecutionOrder(AtomsInternal.ExecutionOrder.VARIABLE_INSTANCER)]
    public class <#= name #>GetSetInstancer : <#= name #>GetSetComponent
    {
        [SerializeField, Tooltip("Variable template to instance.")]
        private <#= name #>GetSetSO baseAtom;

        [SerializeField, ReadOnly]
        private <#= name #>GetSetSO instacedAtom;

        /// <inheritdoc />
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public override <#= dataType #> GetValue() => instacedAtom.GetValue();

        /// <inheritdoc />
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        public override void SetValue(<#= dataType #> newValue) => instacedAtom.SetValue(newValue);

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Code Quality", "IDE0051:Remove unused private members", Justification = "Used by Unity.")]
        private void OnEnable() => instacedAtom = baseAtom.CreateGetSetPrototype();
    }
<#+
        SaveOutput(name + "GetSetInstancer", "Values/Instancers");
    }
#>