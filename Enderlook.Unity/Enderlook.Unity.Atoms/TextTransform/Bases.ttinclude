<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#+
    void GenerateAtomBases(string name, string dataType)
    {
        string interfaceGet = InterfaceGetName(name);
        string interfaceGetSet = InterfaceGetSetName(name);
        string atomGet = AtomGetName(name);
        string atomGetSet = AtomGetSetName(name);

        WriteHeader();
#>
    public interface <#= interfaceGet #> : IGet<<#= dataType #>> { }

    public interface <#= interfaceGetSet #> : IGetSet<<#= dataType #>>, <#= interfaceGet #> { }

    [Serializable]
    public abstract class <#= atomGet #> : BaseScriptableObjectAtom, <#= interfaceGet #>
    {
        public abstract <#= dataType #> GetValue();
    }

    [Serializable]
    public abstract class <#= atomGetSet #> : <#= atomGet #>, <#= interfaceGetSet #>
    {
        public abstract void SetValue(<#= dataType #> value);
    }
<#+
        SaveOutput(name + "Others", name);
    }
#>