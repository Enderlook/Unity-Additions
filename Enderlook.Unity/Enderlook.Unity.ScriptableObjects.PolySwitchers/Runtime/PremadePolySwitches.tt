<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ include file="$(MSBuildProjectDirectory)\Runtime\PolySwitchTemplate.ttinclude" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".autogenerated.cs" #>
<#
    string[] basicTypes = new string[] {
        "bool",
        "string",
        "char",
        "byte",
        "short",
        "int",
        "long",
        "[sb]yte",
        "[us]hort",
        "[ui]nt",
        "[ul]ong",
        "float",
        "double",
        "decimal",
        "Color",
        "Quaternion",
        "Rect",
        "Vector2",
        "Vector2Int",
        "Vector3",
        "Vector3Int",
        "Vector4",
        "GameObject",
        "Collider",
        "Collider2D",
        "Rigidbody",
        "Rigidbody2D",
        "LayerMask",
        "UnityEngine.Events.UnityEvent",
    };

    foreach (string type in basicTypes)
    {
        string last = type.Split('.').Last();
        string name = last[0].ToString().ToUpper() + last.Substring(1);
        string[] parts = name.Split(']');
        if (parts.Length > 1)
            name = parts[0].Replace("[", "").ToUpper() + string.Concat(parts.Skip(1));
        Generate(name, type.Replace("[", "").Replace("]", ""));
        SaveOutput("PolySwitch" + name, "PolySwitches");
    }
#>
<#+
    void SaveOutput(string fileName, string path = "")
    {
        fileName += ".autogenerated.cs";
        string templateDirectory = Path.GetDirectoryName(Host.TemplateFile);
        string outputFilePath = Path.Combine(templateDirectory, path);
        if (!string.IsNullOrEmpty(path))
            Directory.CreateDirectory(outputFilePath);
        outputFilePath = Path.Combine(outputFilePath, fileName);
        File.WriteAllText(outputFilePath, this.GenerationEnvironment.ToString());
        this.GenerationEnvironment.Remove(0, this.GenerationEnvironment.Length);
    }
#>